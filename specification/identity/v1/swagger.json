{
  "openapi": "3.0.1",
  "info": {
    "title": "Eryph Identity Api",
    "description": "Eryph Identity Api",
    "contact": {
      "name": "dbosoft",
      "email": "support@dbosoft.eu"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://localhost:8000/identity"
    }
  ],
  "paths": {
    "/v1/clients": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create a new client",
        "description": "Create a new client",
        "operationId": "Clients_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientRequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientWithSecret"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "List all clients",
        "description": "List all clients",
        "operationId": "Clients_List",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientList"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:read"
            ]
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/v1/clients/{id}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete a client",
        "description": "Delete a client",
        "operationId": "Clients_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:write"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get a client",
        "description": "Get a client",
        "operationId": "Clients_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Update a client",
        "description": "Update a client",
        "operationId": "Clients_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:write"
            ]
          }
        ]
      }
    },
    "/v1/clients/{id}/key": {
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create or replace the client key",
        "description": "Create or replace the client key",
        "operationId": "Clients_NewKey",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientKeyRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientWithSecret"
                }
              }
            }
          },
          "default": {
            "description": "Error response describing why the request failed",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "identity:clients:write"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "required": [
          "allowed_scopes",
          "id",
          "name",
          "roles",
          "tenant_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "type": "string",
            "description": "The Unique identifier of the eryph client.\r\nOnly characters a-z, A-Z, numbers 0-9 and hyphens are allowed."
          },
          "name": {
            "maxLength": 254,
            "type": "string",
            "description": "Human-readable name of the client, for example email address of owner."
          },
          "allowed_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The roles of the client,"
          },
          "tenant_id": {
            "type": "string",
            "description": "The ID of the tenant to which the client belongs."
          }
        },
        "additionalProperties": false
      },
      "ClientList": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        },
        "additionalProperties": false
      },
      "ClientWithSecret": {
        "required": [
          "allowed_scopes",
          "id",
          "key",
          "name",
          "roles",
          "tenant_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 40,
            "type": "string",
            "description": "The Unique identifier of the eryph client.\r\nOnly characters a-z, A-Z, numbers 0-9 and hyphens are allowed."
          },
          "name": {
            "maxLength": 254,
            "type": "string",
            "description": "Human-readable name of the client, for example email address of owner."
          },
          "allowed_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The roles of the client,"
          },
          "tenant_id": {
            "type": "string",
            "description": "The ID of the tenant to which the client belongs."
          },
          "key": {
            "type": "string",
            "description": "The private key or shared secret of the client."
          }
        },
        "additionalProperties": false
      },
      "NewClientKeyRequestBody": {
        "type": "object",
        "properties": {
          "shared_secret": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewClientRequestBody": {
        "required": [
          "allowed_scopes",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 254,
            "type": "string",
            "description": "Human-readable name of the client, for example email address of owner."
          },
          "allowed_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The roles of the client,",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UpdateClientRequestBody": {
        "required": [
          "allowed_scopes",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 254,
            "type": "string",
            "description": "Human-readable name of the client, for example email address of owner."
          },
          "allowed_scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "Eryph only supports the client credentials flow. Depending\r\non the client, you can use either the client secret or a\r\nclient assertion with type\r\n`urn:ietf:params:oauth:client-assertion-type:jwt-bearer`.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://localhost:8000/identity/connect/token",
            "scopes": {
              "identity:read": "Grants read access to the identity API",
              "identity:write": "Grants write access to the identity API",
              "identity:clients:read": "Grants read access for identity clients",
              "identity:clients:write": "Grants write access for identity clients"
            }
          }
        }
      }
    }
  }
}